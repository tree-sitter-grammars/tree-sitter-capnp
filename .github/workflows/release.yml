name: Release

# on:
#   workflow_run:
#     workflows: ["CI"]
#     types:
#       - completed
on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          token: ${{ secrets.GITHUB_TOKEN }}
          package-name: tree-sitter-capnp

  update-readme:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Rust version
        run: |
          repo_name="${{ github.repository }}"
          repo_name="${repo_name##*/}"

          git fetch origin release-please--branches--master--components--tree-sitter-capnp
          git checkout release-please--branches--master--components--tree-sitter-capnp

          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

          git log -n5
          git rev-parse HEAD
          cat package.json
          version=$(grep -o '"version": *"[^"]*"' package.json | sed 's/"version": "\(.*\)"/\1/')

          sed -i "s/version = \"[^\"]*\"/version = \"$version\"/g" Cargo.toml
          sed -i "s/$repo_name = \"[^\"]*\"/$repo_name = \"$version\"/g" bindings/rust/README.md

          echo "version set to: $version"

          git status
          git add Cargo.toml bindings/rust/README.md
          git status
          git commit -m test
          git push -f

  publish:
    runs-on: ubuntu-latest
    needs: [release, update-readme]
    if: ${{ needs.release.outputs.releases_created }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: npm publish

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Publish to Crates.io
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Tag stable versions
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable
